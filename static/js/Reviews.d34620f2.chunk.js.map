{"version":3,"sources":["hooks/useFetchReviews.js","components/Reviews/Reviews.js"],"names":["Status","Reviews","movieID","useState","items","setItems","status","setStatus","useEffect","API","then","res","results","length","catch","useFetchReviews","useParams","slug","match","reviews","className","map","id","author","content"],"mappings":"uMAGMA,EAEK,UAFLA,EAGM,WAHNA,EAIM,W,iBCwBGC,MA3Bf,WACE,IAEA,EDGF,SAAyBC,GACvB,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA4BF,mBAASH,GAArC,mBAAOM,EAAP,KAAeC,EAAf,KAUA,OARAC,qBAAU,WACRC,IAAiBP,GACdQ,MAAK,SAACC,GACLN,EAASM,EAAIC,SACbL,EAAUI,EAAIC,QAAQC,OAASb,EAAkBA,MAElDc,OAAM,kBAAMP,EAAUP,QACxB,CAACE,IACG,CAACE,EAAOE,GCfWS,CAFTC,cAATC,KACaC,MAAM,cAAc,IACzC,mBAAOC,EAAP,KAAgBb,EAAhB,KAEA,OACE,qCACGA,IAAWN,GACV,qBAAKoB,UAAU,UAAf,SACE,6BACGD,EAAQE,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,qBAAIJ,UAAU,cAAd,UACE,oBAAGA,UAAU,SAAb,qBAA+BG,KAC/B,mBAAGH,UAAU,UAAb,SAAwBI,MAFOF,UASxChB,IAAWN,GACV","file":"static/js/Reviews.d34620f2.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport * as API from \"../services/movies-api\";\r\n\r\nconst Status = {\r\n  IDLE: \"idle\",\r\n  PENDING: \"pending\",\r\n  RESOLVED: \"resolved\",\r\n  REJECTED: \"rejected\",\r\n};\r\n\r\nfunction useFetchReviews(movieID) {\r\n  const [items, setItems] = useState([]);\r\n  const [status, setStatus] = useState(Status.PENDING);\r\n\r\n  useEffect(() => {\r\n    API.fetchReviews(movieID)\r\n      .then((res) => {\r\n        setItems(res.results);\r\n        setStatus(res.results.length ? Status.RESOLVED : Status.REJECTED);\r\n      })\r\n      .catch(() => setStatus(Status.REJECTED));\r\n  }, [movieID]);\r\n  return [items, status];\r\n}\r\n\r\nexport { useFetchReviews, Status };\r\n","import { useParams } from \"react-router-dom\";\r\nimport { useFetchReviews, Status } from \"../../hooks/useFetchReviews\";\r\nimport \"./Reviews.css\";\r\n\r\nfunction Reviews() {\r\n  const { slug } = useParams();\r\n  const movieID = slug.match(/[a-z0-9]+$/)[0];\r\n  const [reviews, status] = useFetchReviews(movieID);\r\n\r\n  return (\r\n    <>\r\n      {status === Status.RESOLVED && (\r\n        <div className=\"reviews\">\r\n          <ul>\r\n            {reviews.map(({ id, author, content }) => (\r\n              <li className=\"reviewsItem\" key={id}>\r\n                <p className=\"author\">Author: {author}</p>\r\n                <p className=\"content\">{content}</p>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n\r\n      {status === Status.REJECTED && (\r\n        <p>We don't have any reviews for this movie.</p>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Reviews;\r\n"],"sourceRoot":""}