{"version":3,"sources":["hooks/useFetchCast.js","images/defaultCast.png","components/Cast/Cast.js"],"names":["Status","Cast","movieID","useState","items","setItems","status","setStatus","useEffect","API","then","res","cast","length","catch","useFetchCast","className","map","id","name","character","profile_path","src","defaultImage","alt"],"mappings":"gMAGMA,EAEK,UAFLA,EAGM,WAHNA,EAIM,W,UCPG,MAA0B,wC,OCK1B,SAASC,EAAT,GAA4B,IACzC,EFIF,SAAsBC,GACpB,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA4BF,mBAASH,GAArC,mBAAOM,EAAP,KAAeC,EAAf,KAUA,OARAC,qBAAU,WACRC,IAAcP,GACXQ,MAAK,SAACC,GACLN,EAASM,EAAIC,MACbL,EAAUI,EAAIC,KAAKC,OAASb,EAAkBA,MAE/Cc,OAAM,kBAAMP,EAAUP,QACxB,CAACE,IACG,CAACE,EAAOE,GEhBQS,CADiB,EAAXb,SAC7B,mBAAOU,EAAP,KAAaN,EAAb,KACA,OACE,qCACGA,IAAWN,GACV,qBAAKgB,UAAU,OAAf,SACE,oBAAIA,UAAU,WAAd,SACGJ,EAAKK,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAWC,EAAxB,EAAwBA,aAAxB,OACR,qBAAIL,UAAU,WAAd,UACE,qBACEA,UAAU,QACVM,IACED,EAAY,UAdd,mCAcc,OAAkBA,GAAiBE,EAEjDC,IAAKL,IAEP,sBAAKH,UAAU,QAAf,UACE,6BAAKG,IACL,oBAAGH,UAAU,YAAb,uBAAoCI,UAVVF,UAkBrCZ,IAAWN,GACV","file":"static/js/Cast.4fe67509.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport * as API from \"../services/movies-api\";\r\n\r\nconst Status = {\r\n  IDLE: \"idle\",\r\n  PENDING: \"pending\",\r\n  RESOLVED: \"resolved\",\r\n  REJECTED: \"rejected\",\r\n};\r\n\r\nfunction useFetchCast(movieID) {\r\n  const [items, setItems] = useState([]);\r\n  const [status, setStatus] = useState(Status.PENDING);\r\n\r\n  useEffect(() => {\r\n    API.fetchCast(movieID)\r\n      .then((res) => {\r\n        setItems(res.cast);\r\n        setStatus(res.cast.length ? Status.RESOLVED : Status.REJECTED);\r\n      })\r\n      .catch(() => setStatus(Status.REJECTED));\r\n  }, [movieID]);\r\n  return [items, status];\r\n}\r\n\r\nexport { useFetchCast, Status };\r\n","export default __webpack_public_path__ + \"static/media/defaultCast.011266f3.png\";","import { useFetchCast, Status } from \"../../hooks/useFetchCast\";\r\nimport \"./Cast.css\";\r\nimport defaultImage from \"../../images/defaultCast.png\";\r\nconst IMAGE_URL = \"https://image.tmdb.org/t/p/w342\";\r\n\r\nexport default function Cast({ movieID }) {\r\n  const [cast, status] = useFetchCast(movieID);\r\n  return (\r\n    <>\r\n      {status === Status.RESOLVED && (\r\n        <div className=\"cast\">\r\n          <ul className=\"castList\">\r\n            {cast.map(({ id, name, character, profile_path }) => (\r\n              <li className=\"castItem\" key={id}>\r\n                <img\r\n                  className=\"image\"\r\n                  src={\r\n                    profile_path ? `${IMAGE_URL}${profile_path}` : defaultImage\r\n                  }\r\n                  alt={name}\r\n                />\r\n                <div className=\"descr\">\r\n                  <h5>{name}</h5>\r\n                  <p className=\"character\">Character:{character}</p>\r\n                </div>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n\r\n      {status === Status.REJECTED && (\r\n        <p>We don't have any cast information for this movie.</p>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}